m = 0x4fed377279db2e48b1e85fa3572dbf5d2fa26a7cd10937a286b3a34fc66c13e3d0bcaf0a9d33ce304202e9a4e986fb12bf86d7610506649a536d7113156387faaca5ce560c3cd2137de807d77ca5dc30fd6fa3ddc794908be2301ba9bb8604f6c03eb4847ff5e723d81e42731bb72d8c2646d2a9e2032642aa5128a9cd5c6a4bd75b0e3e2322fb7ac63ddc09c9cad2573cf2b1e1af7974ead8d700b826bbc7b316e8ba240ebbd2a65e13faa68f18cec05d35463da9b509c39b8e5090d91b13163fc3d99ec33df3501e8189fcd3b71fc1fa1ab075cb29f66a64dacab519b7a29c0171306bedbe584176136b576e4727a98054c68e4285fa1f0e980b9957edb9a4
N = 16809924442712290290403972268146404729136337398387543585587922385691232205208904952456166894756423463681417301476531768597525526095592145907599331332888256802856883222089636138597763209373618772218321592840374842334044137335907260797472710869521753591357268215122104298868917562185292900513866206744431640042086483729385911318269030906569639399362889194207326479627835332258695805485714124959985930862377523511276514446771151440627624648692470758438999548140726103882523526460632932758848850419784646449190855119546581907152400013892131830430363417922752725911748860326944837167427691071306540321213837143845664837111L
e = 65537

#eq = e*n == k*(p^2)+ p
R = PolynomialRing(ZZ, 'p')

for k in range(e, 0, -1):
    p = R.gen()
    f = k*p^2 + p - e*N
    ret = f.roots()
    if len(ret) > 0:
        pp = ret[0][0]
        break

q = N/pp

d = inverse_mod(e,(pp-1)*(q-1))
print hex(power_mod(m,d,N))[1:].decode('hex')